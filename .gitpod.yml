# File: .gitpod.yml
image: gitpod/workspace-full

tasks:
  - init: |
      # Update package manager and install required packages
      sudo apt update
      sudo apt install -y unzip wget openjdk-17-jdk

      # Set up Android SDK directories and install command-line tools
      mkdir -p $HOME/Android/Sdk/cmdline-tools
      export CMDLINE_TOOLS_VERSION=latest
      wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O commandlinetools.zip
      unzip commandlinetools.zip -d $HOME/Android/Sdk/cmdline-tools/
      rm commandlinetools.zip
      mv $HOME/Android/Sdk/cmdline-tools/cmdline-tools $HOME/Android/Sdk/cmdline-tools/$CMDLINE_TOOLS_VERSION

      # Set up environment variables
      echo 'export ANDROID_HOME=$HOME/Android/Sdk' >> ~/.bashrc
      echo 'export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64' >> ~/.bashrc
      echo 'export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin' >> ~/.bashrc
      echo 'export PATH=$PATH:$ANDROID_HOME/platform-tools' >> ~/.bashrc
      echo 'export PATH=$PATH:$ANDROID_HOME/tools/bin' >> ~/.bashrc
      source ~/.bashrc

      # Install required Android SDK components
      yes | sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "build-tools;34.0.0" "platforms;android-34"

      # Install Cordova globally
      npm install -g cordova
      
      # Create Cordova project if it doesn't exist
      if [ ! -d "webApp" ]; then
        cordova create webApp com.example.webApp "Web App"
      fi

      cd webApp

      # Add Android platform if not added
      if [ ! -d "platforms/android" ]; then
        cordova platform add android
      fi

      # Update compileSdkVersion and targetSdkVersion in build.gradle
      if [ -f "platforms/android/app/build.gradle" ]; then
        sed -i 's/compileSdkVersion [0-9]*/compileSdkVersion 34/' platforms/android/app/build.gradle
        sed -i 's/targetSdkVersion [0-9]*/targetSdkVersion 34/' platforms/android/app/build.gradle
      else
        echo "build.gradle not found!"
      fi

      # Configure config.xml to point to your Pterodactyl domain
      echo '<widget id="com.example.webApp" version="1.0.0" xmlns="http://www.w3.org/ns/widgets" xmlns:cdv="http://cordova.apache.org/ns/1.0">' > webApp/config.xml
      echo '  <name>Web App</name>' >> webApp/config.xml
      echo '  <content src="https://dash.ptero-maker.my.id/" />' >> webApp/config.xml
      echo '  <allow-navigation href="*" />' >> webApp/config.xml
      echo '  <access origin="*" />' >> webApp/config.xml
      echo '</widget>' >> webApp/config.xml

      # Build Cordova Android project
      cd webApp
      cordova build android

  - command: |
      cd webApp
      cordova emulate android
